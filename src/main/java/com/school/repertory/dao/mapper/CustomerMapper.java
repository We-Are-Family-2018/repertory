package com.school.repertory.dao.mapper;

import com.school.repertory.dao.model.Customer;
import com.school.repertory.dao.model.CustomerExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @SelectProvider(type=CustomerSqlProvider.class, method="countByExample")
    long countByExample(CustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @DeleteProvider(type=CustomerSqlProvider.class, method="deleteByExample")
    int deleteByExample(CustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @Delete({
        "delete from customer",
        "where customer_no = #{customerNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String customerNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @Insert({
        "insert into customer (customer_no, customer_name, ",
        "customer_person, customer_telephone, ",
        "customer_email, customer_address)",
        "values (#{customerNo,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, ",
        "#{customerPerson,jdbcType=VARCHAR}, #{customerTelephone,jdbcType=VARCHAR}, ",
        "#{customerEmail,jdbcType=VARCHAR}, #{customerAddress,jdbcType=VARCHAR})"
    })
    int insert(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @InsertProvider(type=CustomerSqlProvider.class, method="insertSelective")
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @SelectProvider(type=CustomerSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="customer_no", property="customerNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="customer_name", property="customerName", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_person", property="customerPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_telephone", property="customerTelephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_email", property="customerEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_address", property="customerAddress", jdbcType=JdbcType.VARCHAR)
    })
    List<Customer> selectByExample(CustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "customer_no, customer_name, customer_person, customer_telephone, customer_email, ",
        "customer_address",
        "from customer",
        "where customer_no = #{customerNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="customer_no", property="customerNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="customer_name", property="customerName", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_person", property="customerPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_telephone", property="customerTelephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_email", property="customerEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="customer_address", property="customerAddress", jdbcType=JdbcType.VARCHAR)
    })
    Customer selectByPrimaryKey(String customerNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CustomerSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Customer record, @Param("example") CustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CustomerSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Customer record, @Param("example") CustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CustomerSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer
     *
     * @mbg.generated
     */
    @Update({
        "update customer",
        "set customer_name = #{customerName,jdbcType=VARCHAR},",
          "customer_person = #{customerPerson,jdbcType=VARCHAR},",
          "customer_telephone = #{customerTelephone,jdbcType=VARCHAR},",
          "customer_email = #{customerEmail,jdbcType=VARCHAR},",
          "customer_address = #{customerAddress,jdbcType=VARCHAR}",
        "where customer_no = #{customerNo,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Customer record);
}