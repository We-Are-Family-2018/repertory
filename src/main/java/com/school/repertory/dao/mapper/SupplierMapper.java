package com.school.repertory.dao.mapper;

import com.school.repertory.dao.model.Supplier;
import com.school.repertory.dao.model.SupplierExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface SupplierMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @SelectProvider(type=SupplierSqlProvider.class, method="countByExample")
    long countByExample(SupplierExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @DeleteProvider(type=SupplierSqlProvider.class, method="deleteByExample")
    int deleteByExample(SupplierExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @Delete({
        "delete from supplier",
        "where supplier_no = #{supplierNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String supplierNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @Insert({
        "insert into supplier (supplier_no, supplier_name, ",
        "supplier_person, supplier_telephone, ",
        "supplier_email, supplier_address)",
        "values (#{supplierNo,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR}, ",
        "#{supplierPerson,jdbcType=VARCHAR}, #{supplierTelephone,jdbcType=VARCHAR}, ",
        "#{supplierEmail,jdbcType=VARCHAR}, #{supplierAddress,jdbcType=VARCHAR})"
    })
    int insert(Supplier record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @InsertProvider(type=SupplierSqlProvider.class, method="insertSelective")
    int insertSelective(Supplier record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @SelectProvider(type=SupplierSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="supplier_no", property="supplierNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_person", property="supplierPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_telephone", property="supplierTelephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_email", property="supplierEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_address", property="supplierAddress", jdbcType=JdbcType.VARCHAR)
    })
    List<Supplier> selectByExample(SupplierExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "supplier_no, supplier_name, supplier_person, supplier_telephone, supplier_email, ",
        "supplier_address",
        "from supplier",
        "where supplier_no = #{supplierNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="supplier_no", property="supplierNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_person", property="supplierPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_telephone", property="supplierTelephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_email", property="supplierEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_address", property="supplierAddress", jdbcType=JdbcType.VARCHAR)
    })
    Supplier selectByPrimaryKey(String supplierNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @UpdateProvider(type=SupplierSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Supplier record, @Param("example") SupplierExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @UpdateProvider(type=SupplierSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Supplier record, @Param("example") SupplierExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @UpdateProvider(type=SupplierSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Supplier record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier
     *
     * @mbg.generated
     */
    @Update({
        "update supplier",
        "set supplier_name = #{supplierName,jdbcType=VARCHAR},",
          "supplier_person = #{supplierPerson,jdbcType=VARCHAR},",
          "supplier_telephone = #{supplierTelephone,jdbcType=VARCHAR},",
          "supplier_email = #{supplierEmail,jdbcType=VARCHAR},",
          "supplier_address = #{supplierAddress,jdbcType=VARCHAR}",
        "where supplier_no = #{supplierNo,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Supplier record);
}